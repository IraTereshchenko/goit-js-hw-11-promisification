{"version":3,"sources":["js/task-01.js","js/task-02.js","js/task-03.js","index.js"],"names":["delay","ms","Promise","resolved","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","resolve","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","reject","id","logSuccess","logError","warn","amount","catch"],"mappings":";;;AAGA,MAAMA,EAAQC,GACH,IAAIC,QAASC,IAChBC,WAAW,KACVD,EAASF,IACVA,KAIFI,EAASC,GAAQC,QAAQC,sBAAsBF,OAGrDN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ;;AChBjB,MAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,IACxB,IAAIb,QAASc,IAChBA,EAAQF,EAASG,IAAIC,GACjBA,EAAKP,OAASI,EAAW,IAAKG,EAAMN,QAASM,EAAKN,QAAWM,MAKnEb,EAASc,GAAgBZ,QAAQa,MAAMD,GAI7CN,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,OAAOD,KAAKJ;;ACpBnC,MAAMgB,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkBC,IACd5B,MAAAA,EAAQqB,EAA0B,IAAK,KAEtC,OAAA,IAAInB,QAAQ,CAACc,EAASa,KAEzBzB,WAAW,KACYoB,KAAKE,SAAW,IAG/BV,EAAQ,CAAEc,GAAIF,EAAYE,GAAIxB,KAAMN,IAExC6B,EAAOD,EAAYE,KAEnB9B,MAMN+B,EAAa,EAAED,GAAAA,EAAIxB,KAAAA,MACvBC,QAAQC,mBAAmBsB,kBAAmBxB,QAG1C0B,EAAWF,IACfvB,QAAQ0B,qCAAqCH,+BAI/CH,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BzB,KAAKsB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BzB,KAAKsB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,KAC/BzB,KAAKsB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BzB,KAAKsB,GACLI,MAAMH;;AC3CT,aAHA,QAAA,oBACA,QAAA,mBACA,QAAA,mBACA,QAAA","file":"src.4b4ee7fd.js","sourceRoot":"../src","sourcesContent":["// Напиши функцию delay(ms), которая возвращает промис, переходящий в состояние \"resolved\" через ms миллисекунд.\n//  Значением исполнившегося промиса должно быть то кол - во миллисекунд которое передали во время вызова функции delay.\n\nconst delay = ms => {\n    return new Promise((resolved) => {\n        setTimeout(() => {\n         resolved(ms)\n     }, ms)\n })\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n    return new Promise((resolve) => {\n        resolve(allUsers.map(user =>\n            user.name === userName ? { ...user, active: !user.active } : user)\n        )\n    })\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n//  Должно работать так\n \ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n    const delay = randomIntegerFromInterval(200, 500);\n    \n    return new Promise((resolve, reject) => {\n        \n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n\n            if (canProcess) {\n                resolve({ id: transaction.id, time: delay });\n            }\n            reject(transaction.id);\n        },\n            delay);\n\n    })\n};\n\n \nconst logSuccess = ({id, time}) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);","import './sass/main.scss';\nimport './js/task-01.js';\nimport './js/task-02.js';\nimport './js/task-03.js';"]}