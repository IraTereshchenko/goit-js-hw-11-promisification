{"version":3,"sources":["js/task-01.js"],"names":["delay","ms","Promise","resolved","setTimeout","logger","time","console","log","then"],"mappings":";AAGA,MAAMA,EAAQC,GACH,IAAIC,QAASC,IAChBC,WAAW,KACVD,EAASF,IACVA,KAIFI,EAASC,GAAQC,QAAQC,sBAAsBF,OAGrDN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ","file":"task-01.a1606059.js","sourceRoot":"../src","sourcesContent":["// Напиши функцию delay(ms), которая возвращает промис, переходящий в состояние \"resolved\" через ms миллисекунд.\n//  Значением исполнившегося промиса должно быть то кол - во миллисекунд которое передали во время вызова функции delay.\n\nconst delay = ms => {\n    return new Promise((resolved) => {\n        setTimeout(() => {\n         resolved(ms)\n     }, ms)\n })\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms"]}